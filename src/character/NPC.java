package character;

// this is a superficial change 

import racetype.*;
import classtype.*;
/*
 * This is the main class, where the Race and Class are brought together into one object, and where the 
 * features and stats are randomly generated and stored.
 */
public class NPC {
	//The main objects, from which most everything else is generated.
	private Race race;
	private classtype.Class cla;
	//The instance fields generated by or used for the Class
	private int maxHealth, Level;
	private String Armor, PrimaryWeapon, SecondaryWeapon;
	private String[] ClassFeatures, Proficiencies;
	private int[] Stats;
	//Some extra options for customization of NPCs
	private boolean isCombatant;
	private boolean isClassed;
	//The instance fields generated by or used for the Race
	private String FirstName, Surname, Eyes, Hair, Skin;
	private String[] RaceFeatures;
	private int Weight, Speed, Age, Height;
	private Sex s;
	
	public NPC(boolean isCombat, boolean hasClass) {
		isCombatant = isCombat;
		isClassed = hasClass;
		
		s = (Sex)Generator.generate(new Sex[] {Sex.MALE,Sex.FEMALE});
		race = new Race(s,(int)(Math.random()*9+1));
		FirstName = (String)Generator.generate(race.getFirstNames());
		Surname = (String)Generator.generate(race.getLastNames());
		Speed = race.getSpeed();
		Eyes = (String)Generator.generate(race.getEyes());
		Hair = (String)Generator.generate(race.getHair());
		Skin = (String)Generator.generate(race.getSkin());
		Height = Generator.generateNum(race.getHeight());
		RaceFeatures = race.getFeatures();
		Age = Generator.generateNum(race.getAge());
		Weight = Generator.generateNum(race.getWeight());

//		if(isCombatant) {
			Level = Generator.generateNum(new int[] {1,1,1,1,2,2,2,3,3});
			if(isClassed) {
				cla = new classtype.Class(Level, ClassName.getClassName(Generator.generateNum(new int[] {0,1,2,3,4,5,6,7,8,9,10,11})));
			}
			else {
				cla = new classtype.Class(Level, ClassName.getClassName(Generator.generateNum(new int[] {12,13,14})));
			}
//		}
//		else {
//		TODO: Add "Commoner" and "Noble" classes for non-combat NPC's
//		}
		
		int[] bonuses = race.getScoreBonuses();
		Stats = Generator.generateStats(cla.getPrime(), cla.getSecondary());
		for(int i = 0; i < Stats.length; i++) 
			Stats[i] += bonuses[i]; // Giving the racial stat bonuses to the NPC
		Armor = (String)Generator.generate(cla.Armor);
		PrimaryWeapon = (String)Generator.generate(cla.Weapons); //Each NPC has two weapons, although because of the random nature these may need to be modified
		SecondaryWeapon = (String)Generator.generate(cla.Weapons); 
		maxHealth = cla.getMaxHealth(); //The class has already generated the max health based on the hit dice and level
		Proficiencies = new String[2]; //I'm only allowing NPC's to have up to two skill proficiencies, just for simplicity
		Proficiencies[0] = (String)Generator.generate(cla.getProficiencies());
		Proficiencies[1] = (String)Generator.generate(cla.getProficiencies());
		ClassFeatures = cla.getFeatures(); 
		maxHealth += ((Stats[2]-10)/2)*Level; //Adding the Constitution modifier to the Health 
	}

	public String toString() {
		String ret = FirstName+" "+Surname+"\n"+cla+" Level "+Level+"\n";
		ret += "\nDescription: "+Height/12+"'"+Height%12+"\" "+Weight+" lbs., "+Age+" years old, "+Eyes+" eyes, "+Hair+" hair, "+Skin+" skin, "+s;
		ret += "\nRacial Features: Speed "+Speed+", ";
		for(String str: RaceFeatures)
			ret+= str+", ";
		ret += "\nClass Features: ";
		for(String str: ClassFeatures)
			ret+= str+", ";
		ret += "\nProficiencies: "+Proficiencies[0] + ", " + Proficiencies[1];
		ret += "\n"+Armor+", "+PrimaryWeapon+", "+SecondaryWeapon+", Max Health: "+maxHealth+"\n";
		ret += "Stats- STR: " + Stats[0] + " DEX: " + Stats[1] + " CON: " + Stats[2] + " INT: " + Stats[3] + " WIS: " + 
				Stats[4] + " CHA: " + Stats[5];
		return ret;
	}
}
